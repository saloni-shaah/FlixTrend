rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check for admin roles
    function isFounder() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role[0] == 'founder';
    }
    
    function isDeveloper() {
       return 'developer' in get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
    }

    match /users/{userId} {
      // Anyone can read a user's public profile
      allow read: if true;
      
      // A user can create their own profile
      allow create: if request.auth.uid == userId;
      
      // Update Rules:
      allow update: if 
          // Rule 1: A user can update their own profile, but cannot change their own 'role'.
          (request.auth.uid == userId && !('role' in request.resource.data)) ||
          
          // Rule 2: An existing founder can update anyone's 'role' field.
          (isFounder() && request.resource.data.keys().hasOnly(['role'])) ||
          
          // Rule 3 (Bootstrap): The specific founder UID can update their OWN role to bootstrap permissions.
          // This is a one-time operation for the main admin.
          (request.auth.uid == 'uQpi9hoaX9dQQ2YHOYv05orx1rQ2' && userId == 'uQpi9hoaX9dQQ2YHOYv05orx1rQ2' && 'role' in request.resource.data);
    }
    
    // Default deny for all other collections
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
