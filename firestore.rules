rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isFounder() {
      // The founder's UID is hardcoded for bootstrap and administrative purposes.
      return request.auth.uid == 'uQpi9hoaX9dQQ2YHOYv05orx1rQ2';
    }

    // --- User Profiles ---
    match /users/{userId} {
      // Anyone can read user profiles.
      allow read: if true;

      // Users can create their own profile.
      allow create: if isOwner(userId);

      // Rule for updating profiles:
      // 1. A user can update their own profile, BUT they cannot change their 'role'.
      // 2. The Founder can update ANY user's profile, but ONLY to change the 'role' field.
      allow update: if (
        isOwner(userId) && !('role' in request.resource.data)
      ) || (
        isFounder() && request.resource.data.keys().hasOnly(['role'])
      );

      // Users can delete their own profile.
      allow delete: if isOwner(userId);
      
      // Subcollections
      match /{allChildren=**} {
        allow read, write: if isOwner(userId);
      }
    }

    // --- Posts, Flashes, and other collections ---
    // (Add rules for other collections like posts, flashes, chats etc. here as needed)
    // For now, these are open to allow app functionality during development.
    match /{document=**} {
      allow read, write: if request.auth != null;
    }
  }
}
