rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to identify the founder by their unique ID.
    // This is a secure way to grant initial super-admin privileges.
    function isFounder() {
      return request.auth.uid == 'uQpi9hoaX9dQQ2YHOYv05orx1rQ2';
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // ANYONE can read public user profiles.
      allow read: if true;

      // A user can create their own profile.
      allow create: if request.auth.uid == userId;

      // Allow a user to update their own profile, BUT NOT their role.
      // Allow a founder to update ONLY the role field of another user.
      allow update: if (request.auth.uid == userId && !('role' in request.resource.data))
                    || (isFounder() && request.resource.data.keys().hasOnly(['role']));
    }

    // Rules for all other collections (posts, chats, etc.)
    // These are simplified for now. You would add more specific rules
    // for each collection as your app grows.
    match /{document=**} {
      allow read, write: if request.auth != null;
    }
  }
}
